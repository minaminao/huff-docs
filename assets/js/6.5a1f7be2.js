(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{428:function(e,t,o){e.exports=o.p+"assets/img/Seaport.fc2e3d29.png"},450:function(e,t,o){"use strict";o.r(t);var r=o(66),a=Object(r.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"hello-world"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#hello-world"}},[e._v("#")]),e._v(" Hello, world!")]),e._v(" "),r("p",[e._v("注：このセクションは、"),r("RouterLink",{attrs:{to:"/tutorial/the-basics/"}},[e._v("'The Basics'")]),e._v("の続きです。もし、まだお読みになっていないようでしたら、続ける前にご覧になることをお勧めします。")],1),e._v(" "),r("hr"),e._v(" "),r("p",[r("RouterLink",{attrs:{to:"/tutorial/the-basics/"}},[e._v("'The Basics'")]),e._v("の中で、"),r("code",[e._v('"Hello, world!"')]),e._v("がハフにとってかなり高度な概念であることを述べました。というのも、EVMの中で文字列がどのようにエンコードされるかを理解しておく必要があるからです。")],1),e._v(" "),r("h2",{attrs:{id:"primer-abi-encoding"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#primer-abi-encoding"}},[e._v("#")]),e._v(" Primer: ABI Encoding")]),e._v(" "),r("p",[e._v("文字列は動的な型であるため、"),r("code",[e._v('"Hello, world!"')]),e._v(" ("),r("code",[e._v("0x48656c6c6f2c20776f726c6421")]),e._v(") の UTF-8 値を返すというような単純なものではありません。ABI規格では、動的型は3つの部分に分けてエンコードされ、それぞれが1ワード（32バイト）のメモリを使用します。")]),e._v(" "),r("ol",[r("li",[r("p",[e._v("ダイナミックデータのオフセット。(ダイナミックデータ開始へのポインタ, uint256)")])]),e._v(" "),r("li",[r("p",[e._v("ダイナミックデータの長さ。(uint256)")])]),e._v(" "),r("li",[r("p",[e._v("ダイナミックデータの値です。（動的長さ）")])])]),e._v(" "),r("p",[e._v("各パーツは、文字列"),r("code",[e._v('"Hello, world!"')]),e._v("に対して以下のようになります。")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('Memory loc      Data\n0x00            0000000000000000000000000000000000000000000000000000000000000020 // The location of the "Hello, world!" data\n0x20            000000000000000000000000000000000000000000000000000000000000000d // The length of "Hello, world!" in bytes\n0x40            48656c6c6f2c20776f726c642100000000000000000000000000000000000000 // Value "Hello, world!"\n')])])]),r("h2",{attrs:{id:"implementation"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#implementation"}},[e._v("#")]),e._v(" Implementation")]),e._v(" "),r("p",[e._v("次の"),r("code",[e._v("MAIN")]),e._v("マクロは、このエンコードをわかりやすくステップアップするものです。")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('\n#define macro MAIN() = takes(0) returns(0) {\n    // store dynamic offset of 0x20 at 0x00\n    0x20                                     // [0x20]\n    0x00                                     // [0x00, 0x20]\n    mstore                                   // []\n\n    // store string length of 0x0d at 0x20\n    0x0d                                     // [0x0d]\n    0x20                                     // [0x20, 0x0d]\n    mstore                                   // []\n\n    // store bytes for "Hello, world!" at 0x40\n    __RIGHTPAD(0x48656c6c6f2c20776f726c6421) // ["Hello, world!"]\n    0x40                                     // [0x40, "Hello, world!"]\n    mstore                                   // []\n\n    // return full 96 byte value\n    0x60                                     // [0x60]\n    0x00                                     // [0x00, 0x60]\n    return                                   // []\n}\n\n')])])]),r("p",[e._v("この例では、"),r("a",{attrs:{href:"https://www.evm.codes/playground?unit=Wei&codeType=Mnemonic&code='v20~0z~0d~2zws32t48656c6c6f2c20776f726c6421yyyyyyu~4z~60~uwRETURN'~wvz0wMSTOREwyuuuw%5Cnvs1tu00t%200xsPUSH%01stuvwyz~_",target:"_blank",rel:"noopener noreferrer"}},[e._v("evm.codes playground"),r("OutboundLink")],1),e._v("でどのようにメモリが設定され、何が返されるかをインタラクティブに見ることができます。")]),e._v(" "),r("h2",{attrs:{id:"advanced-topic-the-seaport-method-of-returning-strings"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#advanced-topic-the-seaport-method-of-returning-strings"}},[e._v("#")]),e._v(" Advanced topic - The Seaport method of returning strings")]),e._v(" "),r("p",[e._v('前の例では、3つの隣接するワード（それぞれ32バイト）がメモリに保存されていることに注意してください。1番目のワードはオフセットで、2番目のワードは長さです。すべての値がそうであるように、これら2つの単語は左詰めにされています。3番目のワードはバイトなので右詰めにされています。メモリスキーマでは、長さとバイトは隣り合っていることに注意してください。長さ "0d "はメモリロケーション0x3Fにあり、"Hello, world!"の最初のバイト0x48は0x40に格納されています。')]),e._v(" "),r("p",[e._v("長さ("),r("code",[e._v("0x0d")]),e._v(")とバイト数("),r("code",[e._v("0x48656c6c6f2c20776f726c6421")]),e._v(")をとって連結すると、次のようになる。"),r("code",[e._v("0x0d48656c6c6f2c20776f726c6421")]),e._v("となり、左詰めの値となる。")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("0x000000000000000000000000000000000000000d48656c6c6f2c20776f726c6421\n")])])]),r("p",[e._v("ここで、2番目のワードを"),r("code",[e._v("0x20")]),e._v("から始めるのではなく、13バイト分オフセットすると（"),r("code",[e._v("0x20")]),e._v("の代わりに"),r("code",[e._v("0x2d")]),e._v("から始める）、"),r("code",[e._v("0d")]),e._v("が2番目のワードの右端（最下位）ビット（位置0x3F）に収まり、残りのバイトは3番目のワードの左端（最上位）バイト（位置0x40）からすぐに始まるように整列します。")]),e._v(" "),r("p",[e._v("これはハフではよくある手法で、"),r("a",{attrs:{href:"https://github.com/ProjectOpenSea/seaport/blob/fb1c3bf4c25a32ae90f776652a8b2b07d5df52cf/contracts/Seaport.sol#L95-L108",target:"_blank",rel:"noopener noreferrer"}},[e._v("Seaport's _name() function"),r("OutboundLink")],1),e._v("でも話題になった。")]),e._v(" "),r("p",[e._v("ここでは、「TKN」という文字列を使った「Seaport」方式を図解しています。")]),e._v(" "),r("p",[r("img",{attrs:{src:o(428),alt:'The "Seaport" method'}})])])}),[],!1,null,null,null);t.default=a.exports}}]);